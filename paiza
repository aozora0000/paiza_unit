#!/bin/bash -l
source .language
# TERMINAL
RED="$(tput setaf 1)"
GREEN="$(tput setaf 2)"
WHITE="$(tput setaf 7)"
CYAN="$(tput setaf 6)"
UNDERLINE="$(tput sgr 0 1)"
BOLD="$(tput bold)"
NOCOLOR="$(tput sgr0)"
COLS="$(tput cols)"

CASEFILE="case.txt"
ANSWERFILE="answer.txt"
TESTDIR="$(pwd)/tests"
TESTFILES="${TESTDIR}/*"
VERSION=`git rev-parse --short HEAD`
SUBCOMMAND=${1:-usage}

function line() {
    while (( ${#LINE} < COLS ))
    do
        LINE="$LINE#"
    done

    echo "${LINE:0:$COLS}"
}

function run() {
    failed=''
    for dir in $TESTFILES; do
        output=`cat "${dir}/${CASEFILE}" | $language $target`
        answer=`cat ${dir}/${ANSWERFILE}`
        if [ "${output}" = "${answer}" ]; then
            /bin/echo -n "."
        else
            /bin/echo -n "x"
            failed="${failed},${dir}/case.txt"
        fi
    done
    echo
    if [ ${#failed} -eq 0 ]; then
        echo "${GREEN}All Test Green${NOCOLOR}"
    else
        echo "${RED}Failed Any TestCase${NOCOLOR}"
        arr=( `echo $failed | tr -s ',' ' '`)
        for fail in $arr; do
            echo "- $fail"
        done
    fi
}

function verbose() {
    for dir in $TESTFILES; do
        line
        echo "# ${CYAN}TEST CASE $(basename ${dir}) by `basename ${language}` ${NOCOLOR}"
        line
        output=`cat "${dir}/${CASEFILE}" | $language $target`
        answer=`cat ${dir}/${ANSWERFILE}`
        if [ "${output}" = "${answer}" ]; then
            echo "${GREEN}test ${dir}/case.txt success${NOCOLOR}"
            echo
            echo "${GREEN}- answer:${NOCOLOR}"
            echo "${answer}"
            echo
            echo "${RED}- output:${NOCOLOR}"
            echo "${output}"
            echo
        else
            echo "- ${RED}test ${dir}/case.txt faield case${NOCOLOR}"
            echo
            echo "answer:"
            echo "${answer}"
            echo
            echo "output:"
            echo "${output}"
            echo
        fi
    done
}

function clean() {
    for dir in $TESTFILES; do
        rm -rf $dir
    done
    echo "${GREEN}test cases removed${NOCOLOR}"
}

function new() {
    num=${1:-"1"}
    mkdir "${TESTDIR}/${num}" && \
    echo > "${TESTDIR}/${num}/${CASEFILE}" && \
    echo > "${TESTDIR}/${num}/${ANSWERFILE}" && \
    echo "${GREEN}test directory create${NOCOLOR}"
}

function add() {
    for dir in $TESTFILES; do
        last=$(basename $dir)
    done
    new $(expr $last + 1)
}


function version {
    echo "$(basename ${0}) version ${VERSION} "
}

function usage() {
    cat <<EOF
${GREEN}
$(basename ${0}) is a tool for testing https://paiza.jp/

version ${VERSION}

Usage:
    $(basename ${0}) [command] [<options>]

Command:
    new               drop test cases & create new tests directory
    add               create tests direcotory increment folder name
    run               run all tests
    verbose           run all tests & show results
    clean             drop test cases
    version           print $(basename ${0}) version
    help              print this
${NOCOLOR}
EOF
}

case "$SUBCOMMAND" in
    run )
        run;
    ;;
    verbose )
        verbose;
    ;;
    new )
        clean;
        new;
    ;;
    clean )
        clean;
    ;;
    add )
        add
    ;;
    version|--version)
        version
    ;;
    usage|help|--help|-h )
        usage
    ;;
    *)
        echo "[ERROR] Invalid subcommand '${1}'"
        usage
        exit 1
    ;;
esac
